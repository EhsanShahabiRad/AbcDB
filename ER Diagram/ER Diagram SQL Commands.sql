-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS main_schema.categories
(
    id integer NOT NULL DEFAULT nextval('main_schema.product_category_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT product_category_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS main_schema.comments
(
    id serial NOT NULL,
    comment_text text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    customer_id integer,
    CONSTRAINT comments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS main_schema.country
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT country_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS main_schema.customers
(
    id integer NOT NULL DEFAULT nextval('main_schema.customer_id_seq'::regclass),
    full_name character varying(100) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    last_login timestamp without time zone,
    password character varying(100) COLLATE pg_catalog."default",
    address character varying(100) COLLATE pg_catalog."default",
    country_id integer,
    postal_code character varying(50) COLLATE pg_catalog."default",
    phone character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT customers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS main_schema.order_items
(
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    price numeric(10, 2) NOT NULL,
    CONSTRAINT order_items_pkey PRIMARY KEY (order_id, product_id)
);

CREATE TABLE IF NOT EXISTS main_schema.orders
(
    id integer NOT NULL DEFAULT nextval('main_schema.orders_order_id_seq'::regclass),
    customer_id integer,
    date timestamp without time zone,
    description text COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS main_schema.product_categories
(
    product_id integer NOT NULL,
    category_id integer NOT NULL,
    CONSTRAINT product_categories_pkey PRIMARY KEY (product_id, category_id)
);

CREATE TABLE IF NOT EXISTS main_schema.product_tags
(
    product_id integer NOT NULL,
    tag_id integer NOT NULL,
    CONSTRAINT product_tags_pkey PRIMARY KEY (product_id, tag_id)
);

CREATE TABLE IF NOT EXISTS main_schema.products
(
    id integer NOT NULL DEFAULT nextval('main_schema.product_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default",
    supplier integer,
    price numeric(10, 2),
    product_description text COLLATE pg_catalog."default",
    image character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT products_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS main_schema.products_comments
(
    product_id integer NOT NULL,
    comment_id integer NOT NULL,
    CONSTRAINT products_comments_pkey PRIMARY KEY (product_id, comment_id)
);

CREATE TABLE IF NOT EXISTS main_schema.returned_items
(
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    return_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT returned_items_pkey PRIMARY KEY (order_id, product_id)
);

CREATE TABLE IF NOT EXISTS main_schema.stored_queries
(
    query_id serial NOT NULL,
    query_name character varying(100) COLLATE pg_catalog."default",
    query_text text COLLATE pg_catalog."default",
    CONSTRAINT stored_queries_pkey PRIMARY KEY (query_id)
);

CREATE TABLE IF NOT EXISTS main_schema.suppliers
(
    id integer NOT NULL DEFAULT nextval('main_schema.supplier_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    address character varying(255) COLLATE pg_catalog."default",
    contact character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT supplier_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS main_schema.tags
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tags_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS main_schema.comments
    ADD CONSTRAINT comments_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES main_schema.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.customers
    ADD CONSTRAINT fk_country FOREIGN KEY (country_id)
    REFERENCES main_schema.country (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.order_items
    ADD CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES main_schema.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.order_items
    ADD CONSTRAINT order_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES main_schema.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES main_schema.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.product_categories
    ADD CONSTRAINT product_categories_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES main_schema.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.product_categories
    ADD CONSTRAINT product_categories_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES main_schema.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.product_tags
    ADD CONSTRAINT product_tags_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES main_schema.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.product_tags
    ADD CONSTRAINT product_tags_tag_id_fkey FOREIGN KEY (tag_id)
    REFERENCES main_schema.tags (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.products
    ADD CONSTRAINT fk_supplier FOREIGN KEY (supplier)
    REFERENCES main_schema.suppliers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.products_comments
    ADD CONSTRAINT products_comments_comment_id_fkey FOREIGN KEY (comment_id)
    REFERENCES main_schema.comments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.products_comments
    ADD CONSTRAINT products_comments_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES main_schema.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.returned_items
    ADD CONSTRAINT returned_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES main_schema.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS main_schema.returned_items
    ADD CONSTRAINT returned_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES main_schema.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;